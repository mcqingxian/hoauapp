package com.hoau.hoauapp.si.claim;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-06-24T14:56:24.373+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "ClaimsWSServiceImplService", 
                  //wsdlLocation = "http://10.35.8.14:8080/TDHY_CLAIMS/ws-services/claimsWSService?wsdl",
                  targetNamespace = "http://hoauapp.ws.erry.com/") 
public class ClaimsWSServiceImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://hoauapp.ws.erry.com/", "ClaimsWSServiceImplService");
    public final static QName ClaimsWSServiceImplPort = new QName("http://hoauapp.ws.erry.com/", "ClaimsWSServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("http://10.35.8.14:8080/TDHY_CLAIMS/ws-services/claimsWSService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ClaimsWSServiceImplService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://10.35.8.14:8080/TDHY_CLAIMS/ws-services/claimsWSService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ClaimsWSServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ClaimsWSServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ClaimsWSServiceImplService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ClaimsWSServiceImplService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE);
    }

    public ClaimsWSServiceImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE);
    }

    public ClaimsWSServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName);
    }    




    /**
     *
     * @return
     *     returns ClaimsWSService
     */
    @WebEndpoint(name = "ClaimsWSServiceImplPort")
    public ClaimsWSService getClaimsWSServiceImplPort() {
        return super.getPort(ClaimsWSServiceImplPort, ClaimsWSService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClaimsWSService
     */
    @WebEndpoint(name = "ClaimsWSServiceImplPort")
    public ClaimsWSService getClaimsWSServiceImplPort(WebServiceFeature... features) {
        return super.getPort(ClaimsWSServiceImplPort, ClaimsWSService.class, features);
    }

}
